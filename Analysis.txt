Task0.py: Worst case runtime complexity is O(n) where n is the number of lines of the input files
    - Create texts and calls list: O(n)
    - Assemble text and print on console: O(1)

Task1.py: Worst case runtime complexity is O(n^2) where n is the number of lines of the input files
    - Create texts and calls list: O(n)
    - Go though calls and texts list to find all distinct phone number: O(n^2)
    - Count and print result: O(1)

Task2.py: Worst case runtime complexity is O(n^2) where n is the number of lines of the input files
    - Create texts and calls list: O(n)
    - Create dictionary and accumulate call duration for distinct phone number: O(n^2)
    - Look for the number with the longest duration in dictionary: O(n)
    - Print result: O(1)
    
Task3.py: Worst case runtime complexity is O(n^2) where n is the number of lines of the input files
    - Create texts and calls list: O(n)
    - Go though calls list to find all distict area code from call from Bangalore: O(n^2)
    - Sort list: O(n log n)
    - Print on console: O(n)

Task4.py: Worst case runtime complexity is O(n^3) where n is the number of lines of the input files
    - Create texts and calls list: O(n)
    - Create not_telemarket_list: O(n^2)
    - Check if the calling number is not in not_telemarket_list and generate the distinct potential 
      telemarket number: O(n^3)
    - Sort list: O(n log n)
    - Print on console: O(n)